endCol = 2)
#Carreguem Mapa
m <- readOGR("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\mapdata\\bm50mv33sh1fpc1r170.shp")
#Comprovem
plot(m)
names(den) <- c("id", "dens")
#Per utilitzar el fortify s'ha de tindre instal.lat el GPCLIB (Que aixo comporta tindre instal.lat el rtools)
#[install.packages("gpclib", type="source")]
#http://stackoverflow.com/questions/21093399/how-to-turn-gpclibpermit-to-true
#ESTE PAQUETE ES UNA MIEEEEEEEEEEEERDA, ERROR ERROR ERROR WII
d <- fortify(m, region="NOM_COMAR")
#e <- merge(d,den, by="id")
e$dens <- cut_number(e$dens, 9)
#ma <- ggplot(e) + aes(long,lat,group=group, fill = dens) + geom_polygon()
ma <- ggplot(e) + aes(long,lat,group=group, fill = dens) + geom_polygon()
ma
e <- merge(d,den, by="id")
e$dens <- cut_number(e$dens, 9)
#ma <- ggplot(e) + aes(long,lat,group=group, fill = dens) + geom_polygon()
ma <- ggplot(e) + aes(long,lat,group=group, fill = dens) + geom_polygon()
ma
ma <- ggplot() + aes(long,lat,group=group, fill = dens) + geom_polygon()
ma
ma <- ggplot() +geom_map(data=den, map=m,aes(x=long, y=lat, map_id=region), fill="#ffffff", color="#ffffff", size=0.15)
ma <- ggplot() +geom_map(data=d, map=m, aes(x=long, y=lat, map_id=region), fill="#ffffff", color="#ffffff", size=0.15)
library(XLConnect)
require("rgdal")
require("ggplot2")
require("plyr")
library(maptools)
library(RColorBrewer)
require("gpclib")
#Carreguem excel
den <- readWorksheetFromFile("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\data\\primcat.xlsx",
sheet=1,
startRow = 1,
endCol = 2)
#Carreguem Mapa
m <- readOGR("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\mapdata\\bm50mv33sh1fpc1r170.shp")
#Comprovem
plot(m)
#Canvio els noms de les columnes d'excel x crear columna #comuna
names(den) <- c("id", "dens")
class(den)
#Per utilitzar el fortify s'ha de tindre instal.lat el GPCLIB (Que aixo comporta tindre instal.lat el rtools)
#[install.packages("gpclib", type="source")]
#http://stackoverflow.com/questions/21093399/how-to-turn-gpclibpermit-to-true
#Fortifico el shp per utilitzar ggplot2 utilitzant l'índex
d <- fortify(m, region="NOM_COMAR")
#Unim els dos datasets en un
e <- join(d,den, by="id")
#EVITAR PERDRE FILES, buscar una altra funcio
#Afegir DENS, i aixi segurament es solucionar
#Discretitzo la densitat. Tria nombre d'intervals que vulguis.
e$dens <- cut_number(e$dens, 9)
#Genero el mapa
ma <- ggplot(e) + aes(long,lat,group=group, fill = dens) + geom_polygon()
#ma <- ggplot() + aes(long,lat,group=group, fill = dens) + geom_polygon()
ma
library(XLConnect)
require("rgdal")
require("ggplot2")
require("plyr")
library(maptools)
library(RColorBrewer)
require("gpclib")
#Carreguem excel
den <- readWorksheetFromFile("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\data\\primcat.xlsx",
sheet=1,
startRow = 1,
endCol = 2)
den2 <- readWorksheetFromFile("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\data\\NO2.xlsx",
sheet=1,
startRow = 1,
endCol = 2)
g <- readOGR("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\mapdata\\bm50mv33sh1fpm1r170.shp")
names(den) <- c("id", "dens")
class(den)
names(den2) <- c("id", "NO2")
d2 <- fortify(g, region="NOM_MUNI")
library(maptools)
library(maptools)
library(XLConnect)
require("rgdal")
require("ggplot2")
require("plyr")
library(maptools)
library(RColorBrewer)
require("gpclib")
library(maptools)
gpclibPermitStatus()
library(XLConnect)
require("rgdal")
require("ggplot2")
require("plyr")
library(maptools)
library(RColorBrewer)
require("gpclib")
install.packages("maptools")
library(XLConnect)
require("rgdal")
require("ggplot2")
require("plyr")
library(maptools)
library(RColorBrewer)
require("gpclib")
gpclibPermit
install.packages("gpclib")
library(maptools)
install.packages("gpclib")
library(XLConnect)
require("rgdal")
require("ggplot2")
require("plyr")
library(maptools)
library(RColorBrewer)
require("gpclib")
gpclibPermit()
den2 <- readWorksheetFromFile("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\data\\NO2.xlsx",
sheet=1,
startRow = 1,
endCol = 2)
g <- readOGR("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\mapdata\\bm50mv33sh1fpm1r170.shp")
names(den2) <- c("id", "NO2")
d2 <- fortify(g, region="NOM_MUNI")
e2 <- join(d2,den2, by="id")
e2$NO2 <- cut_number(e2$NO2, 5)
ma <- ggplot(e2) + aes(long,lat,group=group, fill = NO2) + geom_polygon()
ma
den2 <- readWorksheetFromFile("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\data\\NO2.xlsx",
sheet=1,
startRow = 1,
endCol = 2)
names(den2) <- c("id", "NO2")
d2 <- fortify(g, region="NOM_MUNI")
e2 <- join(d2,den2, by="id")
e2$NO2 <- cut_number(e2$NO2, 5)
ma <- ggplot(e2) + aes(long,lat,group=group, fill = NO2) + geom_polygon()
ma
den2 <- readWorksheetFromFile("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\data\\NO22.xlsx",
sheet=1,
startRow = 1,
endCol = 2)
names(den2) <- c("id", "NO2")
d2 <- fortify(g, region="NOM_MUNI")
e2 <- join(d2,den2, by="id")
e2$NO2 <- cut_number(e2$NO2, 5)
ma <- ggplot(e2) + aes(long,lat,group=group, fill = NO2) + geom_polygon()
ma
sethTheme <- theme(
panel.background = element_rect(fill = "black"),
plot.background = element_rect(fill = "black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linetype = 3, colour = "white"),
axis.text.x = element_text(colour = "grey80"),
axis.text.y = element_text(colour = "grey80"),
axis.title.x = element_text(colour = "grey80"),
axis.title.y = element_text(colour = "grey80"),
legend.key = element_rect(fill = "black"),
legend.text = element_text(colour = "white"),
legend.title = element_text(colour = "black"),
legend.background = element_rect(fill = "black"),
axis.ticks = element_blank())
ma
mapa <- ggplot(e) + aes(long,lat,group=group) + geom_polygon(aes(fill = dens))
mapa <- mapa + geom_path(color="gray") + coord_equal()
mapa <- mapa + scale_fill_brewer(palette = "YlGnBu") + sethTheme
mapa <- mapa + ggtitle("Densitat de la població") +
theme(plot.title = element_text(size=20, face = "bold", color="white", hjust=2))
mapa
mapa <- ggplot(e2) + aes(long,lat,group=group) + geom_polygon(aes(fill = dens))
mapa <- mapa + geom_path(color="gray") + coord_equal()
mapa <- mapa + scale_fill_brewer(palette = "YlGnBu") + sethTheme
mapa <- mapa + ggtitle("Densitat de la població") +
theme(plot.title = element_text(size=20, face = "bold", color="white", hjust=2))
mapa
ma
library(XLConnect)
require("rgdal")
require("ggplot2")
require("plyr")
library(maptools)
library(RColorBrewer)
require("gpclib")
#Carreguem excel
den <- readWorksheetFromFile("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\data\\primcat.xlsx",
sheet=1,
startRow = 1,
endCol = 2)
den2 <- readWorksheetFromFile("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\data\\NO22.xlsx",
sheet=1,
startRow = 1,
endCol = 2)
#Carreguem Mapa
m <- readOGR("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\mapdata\\bm50mv33sh1fpc1r170.shp")
#MAPA QUE REALMENT UTILITZAREM, EL MUNICIPAL
g <- readOGR("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\mapdata\\bm50mv33sh1fpm1r170.shp")
#Comprovem
plot(m)
#Canvio els noms de les columnes d'excel x crear columna #comuna
names(den) <- c("id", "dens")
class(den)
names(den2) <- c("id", "NO2")
#Per utilitzar el fortify s'ha de tindre instal.lat el GPCLIB (Que aixo comporta tindre instal.lat el rtools)
#[install.packages("gpclib", type="source")]
#http://stackoverflow.com/questions/21093399/how-to-turn-gpclibpermit-to-true
#Fortifico el shp per utilitzar ggplot2 utilitzant l'índex
d <- fortify(m, region="NOM_COMAR")
d2 <- fortify(g, region="NOM_MUNI")
#Unim els dos datasets en un
e <- join(d,den, by="id")
e2 <- join(d2,den2, by="id")
#EVITAR PERDRE FILES, buscar una altra funcio
#Afegir DENS, i aixi segurament es solucionar
#Discretitzo la densitat. Tria nombre d'intervals que vulguis.
e$dens <- cut_number(e$dens, 9)
e2$NO2 <- cut_number(e2$NO2, 5)
#Genero el mapa
ma <- ggplot(e2) + aes(long,lat,group=group, fill = NO2) + geom_polygon()
#ma <- ggplot() + aes(long,lat,group=group, fill = dens) + geom_polygon()
ma
library(XLConnect)
require("rgdal")
require("ggplot2")
require("plyr")
library(maptools)
library(RColorBrewer)
require("gpclib")
#Carreguem excel
den <- readWorksheetFromFile("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\data\\primcat.xlsx",
sheet=1,
startRow = 1,
endCol = 2)
den2 <- readWorksheetFromFile("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\data\\NO22.xlsx",
sheet=1,
startRow = 1,
endCol = 2)
#Carreguem Mapa
m <- readOGR("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\mapdata\\bm50mv33sh1fpc1r170.shp")
#MAPA QUE REALMENT UTILITZAREM, EL MUNICIPAL
g <- readOGR("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\mapdata\\bm50mv33sh1fpm1r170.shp")
#Comprovem
plot(m)
#Canvio els noms de les columnes d'excel x crear columna #comuna
names(den) <- c("id", "dens")
class(den)
names(den2) <- c("id", "NO2")
#Per utilitzar el fortify s'ha de tindre instal.lat el GPCLIB (Que aixo comporta tindre instal.lat el rtools)
#[install.packages("gpclib", type="source")]
#http://stackoverflow.com/questions/21093399/how-to-turn-gpclibpermit-to-true
#Fortifico el shp per utilitzar ggplot2 utilitzant l'índex
d <- fortify(m, region="NOM_COMAR")
d2 <- fortify(g, region="NOM_MUNI")
#Unim els dos datasets en un
e <- join(d,den, by="id")
e2 <- join(d2,den2, by="id")
#EVITAR PERDRE FILES, buscar una altra funcio
#Afegir DENS, i aixi segurament es solucionar
#Discretitzo la densitat. Tria nombre d'intervals que vulguis.
e$dens <- cut_number(e$dens, 9)
e2$NO2 <- cut_number(e2$NO2, 5)
#Genero el mapa
ma <- ggplot(e2) + aes(long,lat,group=group, fill = NO2) + geom_polygon()
#ma <- ggplot() + aes(long,lat,group=group, fill = dens) + geom_polygon()
ma
install.packages("gpclib")
library(maptools)
gpclibPermit()
install.packages("gpclib")
require("rgdal")
require("ggplot2")
require("plyr")
library(maptools)
library(RColorBrewer)
require("gpclib")
#Carreguem excel
den <- readWorksheetFromFile("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\data\\primcat.xlsx",
sheet=1,
startRow = 1,
endCol = 2)
den2 <- readWorksheetFromFile("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\data\\NO22.xlsx",
sheet=1,
startRow = 1,
endCol = 2)
#Carreguem Mapa
m <- readOGR("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\mapdata\\bm50mv33sh1fpc1r170.shp")
#MAPA QUE REALMENT UTILITZAREM, EL MUNICIPAL
g <- readOGR("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\mapdata\\bm50mv33sh1fpm1r170.shp")
#Comprovem
plot(m)
#Canvio els noms de les columnes d'excel x crear columna #comuna
names(den) <- c("id", "dens")
class(den)
names(den2) <- c("id", "NO2")
#Per utilitzar el fortify s'ha de tindre instal.lat el GPCLIB (Que aixo comporta tindre instal.lat el rtools)
#[install.packages("gpclib", type="source")]
#http://stackoverflow.com/questions/21093399/how-to-turn-gpclibpermit-to-true
library(maptools)
gpclibPermit()
#Fortifico el shp per utilitzar ggplot2 utilitzant l'índex
d <- fortify(m, region="NOM_COMAR")
d2 <- fortify(g, region="NOM_MUNI")
#Unim els dos datasets en un
e <- join(d,den, by="id")
e2 <- join(d2,den2, by="id")
#EVITAR PERDRE FILES, buscar una altra funcio
#Afegir DENS, i aixi segurament es solucionar
#Discretitzo la densitat. Tria nombre d'intervals que vulguis.
e$dens <- cut_number(e$dens, 9)
e2$NO2 <- cut_number(e2$NO2, 5)
#Genero el mapa
ma <- ggplot(e2) + aes(long,lat,group=group, fill = NO2) + geom_polygon()
#ma <- ggplot() + aes(long,lat,group=group, fill = dens) + geom_polygon()
ma
den2 <- readWorksheetFromFile("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\data\\NO22.xlsx",
sheet=1,
startRow = 1,
endCol = 2)
den2 <- readWorksheetFromFile("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\data\\NO22.xlsx",
sheet=1,
startRow = 1,
endCol = 2)
library(XLConnect)
require("rgdal")
require("ggplot2")
require("plyr")
library(maptools)
library(RColorBrewer)
require("gpclib")
den2 <- readWorksheetFromFile("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\data\\NO22.xlsx",
sheet=1,
startRow = 1,
endCol = 2)
g <- readOGR("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\mapdata\\bm50mv33sh1fpm1r170.shp")
names(den2) <- c("id", "NO2")
library(maptools)
gpclibPermit()
d2 <- fortify(g, region="NOM_MUNI")
e2 <- join(d2,den2, by="id")
e2$NO2 <- cut_number(e2$NO2, 5)
ma <- ggplot(e2) + aes(long,lat,group=group, fill = NO2) + geom_polygon()
#ma <- ggplot() + aes(long,lat,group=group, fill = dens) + geom_polygon()
ma
e2$NO2 <- cut_number(e2$NO2, 9)
e2$NO2 <- cut_number(e2$NO2, 3)
e2$NO2 <- cut_number(e2$NO2, 4)
e2$NO2 <- cut_number(e2$NO2, 5)
names(den2) <- c("id", "NO2")
d2 <- fortify(g, region="NOM_MUNI")
e2 <- join(d2,den2, by="id")
e2$NO2 <- cut_number(e2$NO2, 6)
ma <- ggplot(e2) + aes(long,lat,group=group, fill = NO2) + geom_polygon()
#ma <- ggplot() + aes(long,lat,group=group, fill = dens) + geom_polygon()
ma
ma <- ggplot() +geom_map(data=d, map=m, aes(x=long, y=lat, map_id=region), fill="#ffffff", color="#ffffff", size=0.15)
ma <- ggplot(e2) +geom_map(data=d, map=m, aes(x=long, y=lat, map_id=region), fill="#ffffff", color="#ffffff", size=0.15)
sethTheme <- theme(
panel.background = element_rect(fill = "black"),
plot.background = element_rect(fill = "black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linetype = 3, colour = "white"),
axis.text.x = element_text(colour = "grey80"),
axis.text.y = element_text(colour = "grey80"),
axis.title.x = element_text(colour = "grey80"),
axis.title.y = element_text(colour = "grey80"),
legend.key = element_rect(fill = "black"),
legend.text = element_text(colour = "white"),
legend.title = element_text(colour = "black"),
legend.background = element_rect(fill = "black"),
axis.ticks = element_blank())
ma
ma <- ggplot(e2) + aes(long,lat,group=group, fill = NO2) + geom_polygon()
#ma <- ggplot() + aes(long,lat,group=group, fill = dens) + geom_polygon()
ma
sethTheme <- theme(
panel.background = element_rect(fill = "black"),
plot.background = element_rect(fill = "black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linetype = 3, colour = "white"),
axis.text.x = element_text(colour = "grey80"),
axis.text.y = element_text(colour = "grey80"),
axis.title.x = element_text(colour = "grey80"),
axis.title.y = element_text(colour = "grey80"),
legend.key = element_rect(fill = "black"),
legend.text = element_text(colour = "white"),
legend.title = element_text(colour = "black"),
legend.background = element_rect(fill = "black"),
axis.ticks = element_blank())
sethTheme
mapa <- ggplot(e2) + aes(long,lat,group=group, fill = NO2) + geom_polygon(aes(fill = NO2))
mapa <- mapa + geom_path(color="gray") + coord_equal()
mapa <- mapa + scale_fill_brewer(palette = "YlGnBu") + sethTheme
mapa <- mapa + ggtitle("Particules de NO2") +
theme(plot.title = element_text(size=20, face = "bold", color="white", hjust=2))
mapa
names(den2) <- c("id", "NO2")
d2 <- fortify(g, region="NOM_MUNI")
e2 <- join(d2,den2, by="id")
e2$NO2 <- cut_number(e2$NO2, 10)
sethTheme <- theme(
panel.background = element_rect(fill = "black"),
plot.background = element_rect(fill = "black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linetype = 3, colour = "white"),
axis.text.x = element_text(colour = "grey80"),
axis.text.y = element_text(colour = "grey80"),
axis.title.x = element_text(colour = "grey80"),
axis.title.y = element_text(colour = "grey80"),
legend.key = element_rect(fill = "black"),
legend.text = element_text(colour = "white"),
legend.title = element_text(colour = "black"),
legend.background = element_rect(fill = "black"),
axis.ticks = element_blank())
mapa <- ggplot(e2) + aes(long,lat,group=group, fill = NO2) + geom_polygon(aes(fill = NO2))
mapa <- mapa + geom_path(color="gray") + coord_equal()
mapa <- mapa + scale_fill_brewer(palette = "YlGnBu") + sethTheme
mapa <- mapa + ggtitle("Particules de NO2") +
theme(plot.title = element_text(size=20, face = "bold", color="white", hjust=2))
mapa
library(XLConnect)
require("rgdal")
require("ggplot2")
require("plyr")
library(maptools)
library(RColorBrewer)
require("gpclib")
#Carreguem excel
den2 <- readWorksheetFromFile("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\data\\NO22.xlsx",
sheet=1,
startRow = 1,
endCol = 2)
#Carreguem Mapa
#MAPA QUE REALMENT UTILITZAREM, EL MUNICIPAL
g <- readOGR("C:\\Users\\Joan\\OneDrive\\CFGS DAW BIO\\Bioinformatica\\wkdirrstido\\mapdata\\bm50mv33sh1fpm1r170.shp")
#Comprovem
plot(m)
#Canvio els noms de les columnes d'excel x crear columna #comuna
names(den2) <- c("id", "NO2")
#Per utilitzar el fortify s'ha de tindre instal.lat el GPCLIB (Que aixo comporta tindre instal.lat el rtools)
#[install.packages("gpclib", type="source")]
#http://stackoverflow.com/questions/21093399/how-to-turn-gpclibpermit-to-true
library(maptools)
gpclibPermit()
#Fortifico el shp per utilitzar ggplot2 utilitzant l'índex
d2 <- fortify(g, region="NOM_MUNI")
#Unim els dos datasets en un
e2 <- join(d2,den2, by="id")
#EVITAR PERDRE FILES, buscar una altra funcio
#Afegir DENS, i aixi segurament es solucionar
#Discretitzo la densitat. Tria nombre d'intervals que vulguis.
e2$NO2 <- cut_number(e2$NO2, 8)
#Genero el mapa
ma <- ggplot(e2) + aes(long,lat,group=group, fill = NO2) + geom_polygon()
#ma <- ggplot() + aes(long,lat,group=group, fill = dens) + geom_polygon()
ma
# aes(long,lat,group=group, fill = dens) --> Per crear les linies del mapa (Cuadricula i el continguts laterals)
sethTheme <- theme(
panel.background = element_rect(fill = "black"),
plot.background = element_rect(fill = "black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linetype = 3, colour = "white"),
axis.text.x = element_text(colour = "grey80"),
axis.text.y = element_text(colour = "grey80"),
axis.title.x = element_text(colour = "grey80"),
axis.title.y = element_text(colour = "grey80"),
legend.key = element_rect(fill = "black"),
legend.text = element_text(colour = "white"),
legend.title = element_text(colour = "black"),
legend.background = element_rect(fill = "black"),
axis.ticks = element_blank())
mapa <- ggplot(e2) + aes(long,lat,group=group, fill = NO2) + geom_polygon(aes(fill = NO2))
mapa <- mapa + geom_path(color="gray") + coord_equal()
mapa <- mapa + scale_fill_brewer(palette = "YlGnBu") + sethTheme
mapa <- mapa + ggtitle("Particules de NO2") +
theme(plot.title = element_text(size=20, face = "bold", color="white", hjust=2))
mapa
library(maptools)
gpclibPermit()
d2 <- fortify(g, region="NOM_MUNI")
#Unim els dos datasets en un
e2 <- join(d2,den2, by="id")
#EVITAR PERDRE FILES, buscar una altra funcio
#Afegir DENS, i aixi segurament es solucionar
#Discretitzo la densitat. Tria nombre d'intervals que vulguis.
e2$NO2 <- cut_number(e2$NO2, 8)
#Genero el mapa
ma <- ggplot(e2) + aes(long,lat,group=group, fill = NO2) + geom_polygon()
#ma <- ggplot() + aes(long,lat,group=group, fill = dens) + geom_polygon()
ma
# aes(long,lat,group=group, fill = dens) --> Per crear les linies del mapa (Cuadricula i el continguts laterals)
sethTheme <- theme(
panel.background = element_rect(fill = "black"),
plot.background = element_rect(fill = "black"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(linetype = 3, colour = "white"),
axis.text.x = element_text(colour = "grey80"),
axis.text.y = element_text(colour = "grey80"),
axis.title.x = element_text(colour = "grey80"),
axis.title.y = element_text(colour = "grey80"),
legend.key = element_rect(fill = "black"),
legend.text = element_text(colour = "white"),
legend.title = element_text(colour = "black"),
legend.background = element_rect(fill = "black"),
axis.ticks = element_blank())
mapa <- ggplot(e2) + aes(long,lat,group=group, fill = NO2) + geom_polygon(aes(fill = NO2))
mapa <- mapa + geom_path(color="gray") + coord_equal()
mapa <- mapa + scale_fill_brewer(palette = "YlGnBu") + sethTheme
mapa <- mapa + ggtitle("Particules de NO2") +
theme(plot.title = element_text(size=20, face = "bold", color="white", hjust=2))
mapa
shiny::runApp('C:/Users/Joan/OneDrive/CFGS DAW BIO/Bioinformatica/shinyapk/AppDefintiva')
shiny::runApp('C:/Users/Joan/OneDrive/CFGS DAW BIO/Bioinformatica/shinyapk/TEMPORAL')
